<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAARMAAAC3CAMAAAAGjUrGAAAABGdBTUEAALGPC/xhBQAAAHJQTFRF////
        AAAADQ0NCAgI9vb2FRUVBAQEGBgYg4OD4eHhk5OT+vr6EBAQ3d3dw8PDeHh4zc3N6OjoIyMjSUlJ7+/v
        Pz8/NTU1VlZWc3NzHR0dioqKuLi4qamp1NTUZGRkWlpasbGxKysrnJycMTExfHx8TU1NtScZyAAAA25J
        REFUeF7t3X1T2koUgPE9eSFgFhCMQGylV2u//1fsOWcDpR7bTq323pn7/KbDbkyyxEf+0+kmAAAAAAAA
        AAAAAAAAAAAAAADwe4bNMGya1OswDPaF08xeN31qLg7NedbYvXqjH/TndfzQZmXt6eXFZf2sscPzWw2b
        aRG/1d9nmvW+yOmuixv66ZLvTpS3fZW5qA9pY8PB3v/eZuu+P9i4TCsbDind2igyT+mmzO5ScyuPaXjQ
        +echPdrXPqbFZxtF/rG172SX0kGOtuzSvqrLPtm4TNc26LI7HR6W6YNIYy+uWY76uuvLs61spaPNrstd
        x9TvbVyUQ5FuYZd8knnf+ENvykr6qK90Jd3YrbRJzu26PHxu87zv57nq7H3bbWvLf5q1eoVc6azy2WNq
        9hphuO2q8WZIH2XMWmJz02WllX3tvYXx1AvRE76sntUmD6Mvu5d2vJ2arGSsdOW6Wey2Wb7YrV23vbaV
        nqRrH+7T/bbt5Cn1xzpvR2sy5lxtdxu75CB3fbPWR9MmK/2e7FFf6Uqq1pvMpJqazOraHr6W7E262ptI
        JVJ7Ex3037lJluxN8sybZP0R1S81qaQsO5tZk21XlSZ1+61JZ/fOtIlObuxW/Y69yVqqypvUlay1iX44
        vEmrN3SXTSr9PqxJW/0nmrTv0STThCY0oUlZmyY0oQlNaEKT79EkoklEk4gmEU0imkQ0iWgS0SSiSUST
        iCYRTSKaRDSJaBLRJKJJ9HZN3uV36HxOaEITmtCEJjShCU0UTSKaRDSJaBLRJKJJRJOIJhFNIppENIlo
        EtEkoklEk4gmEU0imkQ0iWgS0SSiSfR2TfhbCz4nNKEJTZ6jSUSTiCYRTSKaRDSJaBLRJKJJRJOIJhFN
        IppENIloEtEkoklEk4gmEU0imkQ0iWgSvV2Ti98Xz96iSW9N/qX/3/7H+yCM3uT5PgjHX+yDYHsZvNTk
        2T4IZdmf7INgTS72Qei8yV/ZB2HaL2Nhg29s8Z77ZRzO+2WclvX9Mu5LE31x5/0y/Nof7pehYW3QD4rv
        l7G3/TL8ukVZSR/1lWzHkpf3VbETp71LyqFfOc2e76viW5n8Yl+V6dCWPR8au1t/1t/2VfHJdO1pJd9X
        xU5Pd02LlFm55HziD/dVAQAAAAAAAAAAAAAAAAAAAADgfymlr1vxZDkNgM2DAAAAAElFTkSuQmCC
</value>
  </data>
</root>